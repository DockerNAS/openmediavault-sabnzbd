#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          sabnzbdplus
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      NetworkManager
# Should-Stop:       NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: SABnzbd+ binary newsgrabber
### END INIT INFO

############### EDIT ME ##################
# Path to store PID file
PID_FILE=/var/run/sabnzbd/sabnzbd.pid
PID_PATH=/var/run/sabnzbd

# script name
NAME=sabnzbd
DESC=SABnzbd
# startup args
DAEMON_OPTS="--daemon --pidfile $PID_FILE"
EXTRA_OPTS=""
RUN_AS=sabnzbd
DAEMON=SABnzbd.py
APP_PATH=/opt/SABnzbd
CONFIG="/home/sabnzbd/.sabnzbd/sabnzbd.ini"
HOST="0.0.0.0"

if [ -f $CONFIG ]; then
	HOST=`grep -m 1 host $CONFIG | cut -d ' ' -f 3`
    if [ `grep -m 1 enable_https $CONFIG | cut -d ' ' -f 3` == "1" ]; then
		PORT=`grep -m1 https_port $CONFIG | cut -d ' ' -f 3`
	else
		PORT=`grep -m2 port $CONFIG | tail -n1 | cut -d ' ' -f 3`
	fi
else
	PORT="8080"
fi
############### END EDIT ME ##################

test -x $APP_PATH/$DAEMON || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

set -e

if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
	chown -R $RUN_AS:users $PID_PATH
fi

if [ ! -d /home/sabnzbd/.sabnzbd ]; then
    mkdir -p /home/sabnzbd/.sabnzbd
	chown -R $RUN_AS:users /home/sabnzbd/.sabnzbd
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        echo "Removing stale $PID_FILE"
        rm $PID_FILE
    fi
fi

load_settings()
{
    HOST="0.0.0.0"
	#Set SABnzbd address here.
    EXTRAOPTS=""
    OPTIONS="$DAEMON_OPTS"
    OPTIONS="$OPTIONS --config-file $CONFIG $EXTRA_OPTS"
    SERVER="$HOST"
    SERVER="$SERVER:$PORT"
    OPTIONS="$OPTIONS --server $SERVER"
    OPTIONS="$OPTIONS $EXTRAOPTS"
}

is_running()
{
    if [ ! -e $PID_FILE ]; then
        return 1
    fi
    return 0
}

case "$1" in
    start)
        echo "Starting $DESC"
        load_settings;
        cd $APP_PATH
        start-stop-daemon -d $APP_PATH -c $RUN_AS --start --exec $DAEMON -- $OPTIONS
        ;;

    stop)
        if is_running; then
            echo "Stopping $DESC"
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        ;;

    restart|force-reload)
        if is_running; then
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        echo "Restarting $DESC"
        load_settings;
        cd $APP_PATH
        start-stop-daemon -d $APP_PATH -c $RUN_AS --start --exec $DAEMON -- $OPTIONS
        ;;

    status)
        status_of_proc -p $PID_FILE "$DAEMON" "$NAME"
        ;;

    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|status|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
